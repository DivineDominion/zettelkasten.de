---
title: The Archive Release Notes
published: false
---

[Back to the Project Page](/the-archive/)

## v0.4.22 (2018-01-11)

* **Fixed:** Matching URLs was improved to exclude closing parens and other non-usual characters at the end of a web link.
* **Fixed:** You can now use backticks (\`) and quotation marks (`"` and `'`) to compose accented characters in keyboard layouts that support this, e.g. _U.S. International - PC_ or various European language ones. To get the auto-completion of character pairs in spite of the macOS accentuation mode, simply type space to type the character itself and trigger auto-pairing.
* **Changed:** Blockquote highlighter is more relaxed now to highlight empty lines with a `>` in a row, too.
* **Changed:** Clicking the same `[[WikiLink]]` will now refresh the search results (removing notes that no linker match the link contents) and take you to the best match again. In other words, clicking the same link more than once behave the same now, whereas it used to ignore consecutive clicks.
* **Changed:** Typing keys that are used to compose accented characters (usually drawn as the accent with a yellow background, waiting for completion) now does not trigger auto-pairing unless you abort the composition (with ESC or space, for example).
* **Changed:** Line width computation is now based on EN-width instead of EM-width (making it narrower for proportional width fonts). This is supposed to improve compatibility with [iA Writer Duospace Font](https://github.com/iaolo/iA-Fonts).

## v0.4.21 (2018-01-09)

* **Fixed:** Formatting shortcuts are functional again.
* **Fixed:** Selecting lots of notes is now way faster -- almost instantaneous, in fact. Even with 45k notes.

## v0.4.20 (2018-01-06)

* **Fixed:** Crash when indenting a line with a single character in it using <kbd>⌘]</kbd>.
* **Changed:** Dragging in the result list expands note selection instead of changing it.
* **New:** Multiple note selections in the results list (as usual, use command-click to pick some, or shift-click to select a range).
* **New:** Copy Link/Copy Links in result list's contextual menu.

## v0.4.19 (2017-12-23)

* **Fixed:** Indent/outdent selection works more reliably with mixed indentation characters (tabs and spaced).
* **New:** Configurable soft tabs (2 or 4 characters wide). 
* **New:** Bold/italics shortcuts behave more clever: when the selected text is already emphasized, they try to de-emphasize the text. It you have no text selected, the shortcuts behave as if you type the `*` or `_` yourself, making them overwritable. Also, hitting the shortcut a second time inside the emphasis _closes_ it instead of opening a new emphasis pair.

## v0.4.18 (2017-12-20)

* **Fixed:** Another case where the blinking cursor was drawn too far to the top.
* **Fixed:** Do not ask for quitting confirmation when installing an update.
* **Fixed:** ESC inside the Omnibar properly deselects the note in the results list.
* **Fixed:** Reporting errors via email with ampersands `&` in error file names did truncate the message.
* **New:** Show warning when the selected theme file is broken.

## v0.4.17 (2017-12-19)

* **Fixed:** Insertion point is not drawn too far to the top anymore when you insert line breaks at the end of a note.
* **Changed:** Log files do now rotate daily (I don't know if there's a pun intended by the folks who came up with the terms). This means the app will keep 5 daily log files and clean up the rest. No more ever-growing multi-megabyte logs anymore, hooray!
* **New:** _Help ▶ Send Log Files_, in case you need to send your log files for debugging.

## v0.4.16 (2017-12-13)

Please delete existing themes to have _The Archive_ save new versions on launch.

### Overall app

* **Fixed:** Removed vertical resizing indicator (mouse cursor) at the bottom edge of the `Omnibar`.
* **Fixed:** Typewriter mode didn't "lock" on to the correct position for a while, which now seems to not cause problems anymore.
* **Fixed:** The currently selected match of highlighted search terms in the text editor did not look much different from all the others, making it hard to see where your selection is.
* **Fixed:** Clicking a `[[WikiLink]]` did not allow selecting the note from which you came right away. When the search produces only the link source itself, you weren't able to do anything with the search results.
* **Changed:** Switching fonts from a monospace to a flexible width font now shows an alert. If you switch from one flexible width font to another, you won't be nagged, though. (So you can adjust font sizes without problems, for example.)
* **New:** Safe-guarding dialog that asks before you quit in case you accidentally hit <kbd>⌘Q</kbd>, for example when you tab between applications. 


### Markdown Highlighting

* **Fixed:** Emphasis flanking and flanked by parens and punctuation marks works correctly.
* **Fixed:** Emphasis of single characters.
* **Changed:** Markdown emphasis is now less strict: text will stay bold and italicized with a space character before the closing asterisks, so that emphasis remains visible while you type inside.
* **New:** Highlight MultiMarkdown-style footnote syntax, like `[^this-here]` for a reference footnote, and `[^The footnote text directly]` for Pandoc/MMD4 inline footnotes. Comes with a new theme rule, surprisingly called `footnote`.
* **New:** Themes now support an optional `unfocusedBackgroundColor` for `editor` ▶ `selection` (and `editor` ▶ `highlight`, but there it has no effect, yet) in order to customize the color of highlighted text when the window is not in the foreground or the text editor does not have focus. Previously, macOS used its default gray. 

## v0.4.15 (2017-12-05)

* **Fixed:** Highlights headings and code blocks at the end of the document, even without trailing new lines.
* **Changed:** Double-clicking the font preview in the editor settings opens the font picker.
* **Changed:** Double-clicking an icon in the Saved Searches editor opens the icon picker popover.
* **New:** Picking a non-monospace font will show a notice in the settings.
* **New:** Added "Allows theme to override font" setting, which is enabled by default; disabling it will make multi-font themes uniform, retaining all color and the font replacement's style settings (bold, italic).

## v0.4.14 (2017-12-03)

* **Changed:** Experimental Markdown highlighter fix. Could also be more broken. Looks good to me so far, though.

## v0.4.13 (2017-12-02)

* **Fixed:** Files in subfolders are ignored and are not added to the index anymore.
* **New:** The find bar of the editor is closed when you switch notes.
* **New:** You can invoke "Find and Replace" for the editor from within the Omnibar and the results list. From anywhere, actually.

## v0.4.12 (2017-12-01)

* **Fixed:** Crash when changing font/font sizes a lot, then switch notes or type.
* **Fixed:** Unpredictable surprise crash when switching notes or type.

All of these weird crashes are not a good sign for the new Markdown highlighter, I have to admit.

## v0.4.11 (2017-11-30)

* **Fixed:** The font color of search term highlights did not disappear when you began editing a note, but now they do.
* **Fixed:** Carriage-returns instead of proper newlines now do not interfere with highlighting anymore. (Unlike advertised, this did not ship with v0.4.10.)
* **Changed:** Scroll results to top when typing in the Omnibar. (I did wonder why there are so little results after a search for old stuff more than once because I did not realize I could scroll up to reveal more. I have no clue where this assumption came from, but here it is, and it feels better now that it works accordingly.)

## v0.4.10 (2017-11-29)

* **Fixed:** Crash when browsing through long notes rapidly with search term highlighting enabled. As a side effect, highlighting performance should now be a bit better, too.

## v0.4.9 (2017-11-25)

* **Fixed:** Showing properly sized icon in the "Loading" window.
* **Fixed:** The "Loading" window now hides when you tab into another app and does not obstruct other applications.
* **Fixed:** Crash when working with blockquotes.
* **Fixed:** A few new layout glitches.
* **Fixed:** Fix Markdown issues with mixed newline characters, noticeable around headings, for example: Treat newline characters from Windows (carriage return) as lines terminators properly.
* **Fixed:** When sorting by modification date, selecting a note with the mouse did not work (because the re-sorting interfered); now it does!
* **Changed:** Improve performance of the Markdown highlighting slightly.
* **Changed:** Dragging around in the results list changes the active note; this is an unintended but welcome side effect of mentioned fix for selecting notes before re-sorting the result list.

## v0.4.8 (2017-11-24)

* **Fixed:** Text layout problem, resulting in crashes and overlapping characters.

## v0.4.7 (2017-11-23)

* **Fixed:** Changing the archive directory does not reset the sort order to "Title Ascending" anymore.
* **Fixed:** Changing the sort order with an active search now properly re-sorts the currently visible results.
* **Changed:** Atx-style headings are recognized without empty lines around them.
* **Changed:** Blockquotes do not require an empty space character after the `>` anymore.
* **New:** Sorting by modification date -- find the settings in the _View ▶ Sort By_ menu!
* **New:** Added "Reload Results" (<kbd>⌃R</kbd>) to the _Search_ menu for now to perform the same search again to update results.

## v0.4.6 (2017-11-21)

* **New:** "Disable Markdown" made its return to the Debug menu.
* **Fixed:** Reference-style link matching is not greedy anymore, that is not everything between a first and second link in the same paragraph will become blue.

## v0.4.5 (2017-11-18)

I bit the bullet and wrote a lightweight Markdown syntax highlighter completely from scratch. That's not to brag, but it's important to know that a lot might look differently now:

* **Fixed:** When switching active notes where one started with a link and the other didn't falsely styled the other one as a link, i.e. blue with underline.
* **Changed:** The syntax highlighter is different, so some files may produce different output than before.
* **New:** The Theme files have changed completely.

Also:

* **Fixed:** Typing 2 asterisks or underscores after a word now does not produce 3 anymore (the 2nd one was treated as an auto-completable new pair).
* **Changed:** Typing 2+ asterisks or underscores results in auto-completing the same amount of characters after the caret. Previously, typing `**` was interpreted as closing an emphasis; now it is treated as opening another bracketed asterisk pair. This is weird to put into words, but you'll see as soon as you type 2 asterisks. Try it!
* **Changed**: Allow even more special characters like `:` in hashtags.

## v0.4.4 (2017-11-10)

* **Fixed:** Auto-continuation of ordered lists wrapped to "1" after "10", but now correctly continues with "11".
* **Fixed:** "Copy title" from the contextual menu did not copy the title of the note you clicked on, but the currently visible note.
* **Fixed:** Many shortcuts and menu items related to the results list were disabled.

The mega-update I planned to release today will take some more time, sorry!

## v0.4.3 (2017-10-14)

* **Fixed:** Typing a quotation mark either before or (new!) right after a word does not insert a second one after the caret. Same for `*` and `_`.
* **Fixed:** Hitting Tab in the Quick Entry text field now switches focus to the title instead of indenting the line. 
* **Fixed:** ⌥+Tab shortcuts and all formatting shortcuts now work in the Quick Entry text field.
* **Fixed:** "Toggle List" formatting did not recognize ordered list items with parens, like `1)`.
* **Changed:** When using "Select Line" (<kbd>⇧⌘L</kbd>) in a list once, it selects textual list contents excluding the list item; use the shortcut again to select the whole line.
* **New:** Brand new Saved Search editor so you can edit your saved searches from the menu bar and hide the sidebar if you want.
* **New:** You can disable search highlighting in the note editor with a new setting. Disabling will not highlight search term occurrences visually and will not scroll down until the first match is visible.
* **New:** Continuation of blockquote markers now works just like list markers: hit Enter in a blockquote environment and the new line will start with a `>`, too.

## v0.4.2 (2017-10-04)

* **Fixed:** Hard-to-explain issue of outdated search results. Say you searched for the ID `201709300742` through clicking on a link. Then you got 2 results, one with the link, one of the note itself. Then you renamed the note's title, keeping the ID, and clicked the same link again -- poof, note was gone. That's because clicking a link cleared the "old known notes" cache; but since the search term was the same, it did not perform the search request.
* **Fixed:** Once you edited a note in your current workspace (= your search results), switching back to the note later will put the text editing caret where you left it off instead to the first search term match.
* **Fixed:** Typing in the Omnibar did not live-update the search highlight inside the note, if any, until you switched to the editor view.
* **Fixed:** The error reporting dialog now includes the correct build number.
* **Fixed:** After launch, the notes are in the expected sort order from last time instead of resetting to "Title Ascending".
* **Changed:** Renamed "Filters" to "Saved Searches" for now. Real filters will be different, more like in v0.1, where you could activate a filter and search inside the confines of its context.
* **Changed:** Adding emphasis using <kbd>⌘I</kbd> or <kbd>⌘B</kbd> now puts the caret in between the marks when you don't have anything selected.
* **Changed:** Removed `$` to denote math markup because the Markdown extension was matching text too eagerly.
* **Changed:** Invoking a search using a saved search now auto-selects a matching note by the same rules a manual search would, so you can write index notes for your saved searches.
* **New:** Naive-ish continuation of list environments when you hit the newline. Will also continue inside code blocks, which is not ideal, but we'll get there.

## v0.4.1 (2017-09-29)

* **Fixed:** Removing a note from the file system that's part of the search results now displays a cached version of the note before it was deleted. You can edit it and never know somebody removed the file from your archive directory. This is another measure to ensure reliable search results consistency.

## v0.4.0 (2017-09-27)

The motto of the 0.4 version branch is _reliability_. We're approaching a first stable public release, folks.

* **Fixed:** Delete note, undo, redo, then undo again -- this used to report an error because the re-creation was attempted twice.
* **Fixed:** Remembering and scrolling to the old caret position got in the way when you did not tab but clicked into the editor. When you click, your caret now lands below the mouse cursor again.
* **New:** Search results are treated as your temporary contents "on the desk", being exempt from (most) file system changes:

    * Creating a new note with ⌘N while a search is active displays the new note even though it doesn't match the search criteria.
    * Removing the search term contents from a note does not remove it from the search results immediately anymore.


## v0.3.11 (2017-09-20)

* **Fixed:** When searching in a note and then typing, the cursor sometimes used to jump back to the first occurrence of the search term while you typed.
* **New:** Remember text selection/cursor position in notes.

For this release, I created an open source library to store the text selection in file metadata. All in all, I thus published 6 libraries so far during development.

## v0.3.10 (2017-09-15)

I replaced the way notes are stored internally. Previously, your files on disk were the dominant source of information; now it's the content in main memory. This has a ton of consequences, like sped-up response times when creating and editing notes -- because while changes are still stored to disk, the changes appear in memory first, and they do appear fast.

Should fix, among other things:

- file conflicts when renaming
- note creation errors when hitting "Enter" twice too quickly

## v0.3.9 (2017-09-07)

* **Fixed:** Full-screen mode toggling did not adjust the lowest possible caret position in typewriter mode.
* **Fixed:** Reading files with broken encoding falls back to _something_ instead of skipping the note.
* **Changed:** Improved performance of the Markdown highlighting when changing notes rapidly.
* **Changed:** Support `§` in hashtags.

## v0.3.8 (2017-08-23)

* **Fixed:** Undoing surrounding text with Markdown emphasis markup produced the wrong "original" text when it was itself a bracket or syntax element.
* **Fixed:** List items on multiple lines are now indented correctly for non-monospaced fonts.
* **Fixed:** Changing the main window to fullscreen mode and back again sometimes made the centered text column too small.
* **Fixed:** Searching inside the note (⌘F) previously broke the behavior of tabbing from the Omnibar to the editor.
* **Fixed:** First launch (or launch after deleting themes) does not show a white text editor anymore.
* **Fixed:** A cause of erratic scrolling when the displayed note text changed, maybe even on auto-save events.
* **Changed:** Picking a new filter icon now sports a regular and easy-to-notice button instead of the clever triangle.
* **New:** When navigating search results, <kbd>Cmd</kbd> and <kbd>Alt</kbd> plus the arrow keys lets you quickly jump to the beginning or end of the list.
* **New:** Search terms are highlighted within the note and the text scrolls down to make them visible.

## v0.3.7 (2017-08-18)

Focus on list and block editing:

* **Fixed:** If you had disabled Markdown highlighting, it would ignore the setting at next launch.
* **Fixed:** Deleting the opening parens of an auto-completed parens pair does not remove the first character after the parens anymore.
* **Changed:** Emboldening and italicizing selected text with the menu shortcuts now selects the resulting emphasized text instead of putting the caret at the end.
* **Changed:** Solarized theme's caret colors. (You have to delete existing files to have them copied over on launch.)
* **New:** "Select Line" in the Edit menu.
* **New:** "Find" shortcut (<kbd>Cmd-F</kbd>) works with focus in the Omnibar and the results list to search inside a note.
* **New:** Make any text into a list with the new "Switch List Type" (<kbd>Cmd-T</kbd>) format option! _Note: Suggestions for a better term than "switch" are very welcome. I cannot recall which English verb expresses going in circles between the options here the best. For 2, it'd be "toggle", but for 3...?_
* **New:** You can indent and outdent lines of text by selecting text and hitting <kbd>tab</kbd> (or use <kbd>Cmd-]</kbd> and <kbd>Cmd-[</kbd>, popular for English keyboard layouts; or <kbd>Alt-Tab</kbd> and <kbd>Shift-Alt-Tab</kbd> for the rest of us).
* **New:** When you hit Enter/Return in an indented line, the new line will be indented as well.
* **New:** You can now comment the selected text with <kbd>Cmd-/</kbd> or from the "Format" menu.

## v0.3.6 (2017-08-12)

* **Fixed:** Captured images from your webcam now produce a valid path with percent encoding.
* **Changed:** The Quick Entry window now has a sensible minimum size.
* **Changed:** The text editing caret is now twice as fat!
* **Changed:** Typing brackets (and Markdown syntax stuff) right in front of existing text now does not insert the closing brackets anymore.
* **New:** Bold (⌘B) and italics (⌘I) shortcuts. You can set your preferred Markdown emphasis character in the "Editing" preferences.
* **New:** You can set which external editor is used when you hit "Open with External Editor" (⇧⌘E).
* **New:** Links to images in the media subfolder are now clickable.
* **New:** Your preferences for spell checking, quote substitution, and things like that are now saved between launches.

## v0.3.5 (2017-08-08)

* **Fixed:** Markdown list items starting with a `-` were not indented properly.
* **Fixed:** With Typewriter Mode and Markdown highlighting enabled, you couldn't scroll up without the app snapping back to the insertion point in the text.
* **Fixed:** Pre-installer filter icon picker shows icons at their proper size.
* **Fixed:** Right-click contextual menu works again in the search results list.
* **Fixed:** Keyboard shortcuts (cut, copy, paste) and text expansion apps should now work in the Quick Entry panel.
* **Changed:** The Quick Entry panel's optional title text field is styled like the content text field.
* **Changed:** You can now edit text of error reports before composing the email to redact the contents.

## v0.3.4 (2017-08-06)

* **Changed:** Improved Markdown syntax highlighting. Lists now indent more beautifully. I love lists. And I love how they behave now. I bet you'll love it, too.
* **New:** Themes.

## v0.3.3 (2017-07-28)

* **New:** Live Markdown syntax highlighting. It's a awfully hungry for energy at the moment, especially for larger files, so you can disable it from the main menu if needed.

That's about all I've been working on, shockingly.

## v0.3.2 (2017-07-18)

* **Fixed:** Hashtags now support umlauts, chinese characters, and whatever else is considered a letter according to Unicode.
* **Fixed:** When you click out of the text editor and then back again, you can now undo changes from before clicking away.
* **Fixed:** Renaming a note to include a `/` resulted in an error.
* **Fixed:** An error when using a note title with illegal file name characters in the Quick Entry Helper.
* **Changed:** Reverted replacing colons in filenames. It's enough to take care of `/` to make macOS's file system happy.
* **New:** Remember the insertion point in the text when you tab out of the note and then back again. Makes shortcut-heavy workflows in the same note easier, like ⌘L + ⌘C (copy note title) + Tab + ⌘V (paste title into text).
* **New:** For dark and very bright backgrounds, use a tasty blue-ish caret color.

## v0.3.1 (2017-07-17)

* **Fixed:** Switching the displayed note did scroll far to the bottom of the note. Now it starts at the beginning again.
* **Fixed:** Show filter sidebar slide-out thingies again.
* **Fixed:** After renaming a note, delayed file saving changes resulted in periodic replacement of the editor content with outdated text. Extremely annoying when you were still typing!
* **Fixed:** The insertion point or selection is preserved when the note updates in the background, for example due to a file change with an external editor.
* **Changed:** Activating a filter via shortcuts or sidebar or menu item closes the current note and puts focus inside the Omnibar so you can navigate more quickly.
* **New:** Plain-text quotation marks (`"` and `'`) behave like brackets: you can wrap the selected text with them, and they always come in pairs.

## v0.3.0 (2017-07-15)

* **Fixed** Crash on launch for macOS El Capitan.
* **New:** Typewriter scrolling!
* **New:** Autocompletion and selection wrapping with brackets, underscores, and asterisks! Select a text, hit `*`, and it'll be surrounded by default!

For this release, I created an open source library for the Typewriter stuff, so this project produced 5 libraries so far.

## v0.2.10 (2017-06-28)

* **Fixed:** Replace ":" and "/" in file names with "-". Dropping files into the Omnibar and hitting enter now doesn't crash anymore.
* **Fixed:** Display glitches for long notes when hiding the sidebars.
* **Fixed:** Insertion point in the text editor is nudged up to look more conventional.* **Changed:** Performance when handling huge archives is improved. Search results still do not appear instantly, but it's better.
* **Fixed:** Sidebar width or it being hidden is preserved across program launches.
* **Changed:** Renamed "Close Archive" to "Switch Archives".
* **Changed:** Deleting a note does select the Omnibar with the note's title, but it does not empty the Omnibar anymore.
* **New:** Added "Copy Title" to the search result contextual menu.
* **New:** Display an error report with a list of files that cannot be read after launch instead of showing a serious error alert for each file.
* **New:** Without a selection, hitting the up-arrow inside the Omnibar selects the last item in the search result list.

## v0.2.8 (2017-06-24)

* **Fixed:** Changing the file you are editing from another app does not lose your current changes in The Archive. (Dropbox sync used to reset the file sometimes to the previously saved version. Also, editing a file and clicking a `[[Wiki Link]]` sometimes did lose the changes when showing the target note.)
* **Changed:** Reorganized the "Editing" prefereces.

## v0.2.7 (2017-06-23)

* **Fixed:** Fix revealing same note in finder twice not doing anything.
* **Fixed:** Fix editing same note in default editor twice not doing anything.
* **Fixed:** Undo note deletion selects the restored note properly, showing the title in the Omnibar.
* **Fixed:** The "Don't show this message again" setting for the deletion alert is preserved. You can re-enable this at the bottom of the "General" preferences.
* **Fixed:** Font preview box displays the top of the font now and grows taller.
* **Fixed:** Changing archives closes the main window.
* **Changed:** Hitting ESC or ⌘. in the text editor resets the search.
* **Changed:** Saving note changes preserves the creation date.
* **Changed:** After deleting a note, the Omnibar is cleared.
* **Changed:** Improved startup times (a.k.a. initial indexing of all notes is faster).
* **Changed:** When you click a hashtag, the Omnibar is focused now.

## v0.2.6 (2017-06-18)

* **Fixed:** Filter menu shortcuts work now even before you peek at the menu.
* **Fixed:** The clear button now hides itself again.
* **Fixed:** Tabbing out of editing a note's title now puts the focus into the text editor instead of the Omnibar.
* **Fixed:** On macOS Sierra, the search result backgrounds now don't have the see-through effect anymore.
* **Fixed:** Fast typing sometimes made the whole Omnibar contents be selected so that the next keystroke would overwrite everything. This was because the search results wrongly triggered a selection event. Doesn't happen anymore.
* **Changed:** Disable text substitutions in the editor pane.
* **Changed:** Omnibar title suggestions don't remember the last suggestion anymore. So if you search for "2017" first, get a suggestion, then start anew with "20", the old "2017..." suggestion is now discarded.
* **New:** "Reveal in Finder" (⌘⇧R) added below "Notes" menu.
* **New:** "Open with External Editor" (⌘⇧E) added below "Notes" menu.

## v0.2.5 (2017-06-12)

* **Fixed:** Notes are now sorted in a natural-language way, so "10" comes between "9" and "11", not between "1" and before "2".
* **Fixed:** Starting the app shows all notes. (At least I couldn't reproduce the problem anymore.)
* **Fixed:** Flickering in the editor window when searching for notes.
* **Fixed:** Clicking a `[[WikiLink]]` will always select the matching note. Previously, a bug sometimes cleared the selection in the results list.
* **Fixed:** Tabbing from Omnibar to the editor works again.
* **Fixed:** Moving the result selection with the down-arrow key from the Omnibar now doesn't jiggle the scroll position at the bottom anymore.
* **Changed:** Improved type-for-filtering reaction speed for large archives.
* **Changed:** Improved scrolling and keyboard-based selection change speed in results view.
* **Changed:** Improved performance of command-tabbing back into the app. It took about a second previously.
* **Changed:** Double-click in the results list starts editing, _even when the note was selected already._
* **New:** Added contextual menu (right-click menu) to the results list for deleting and renaming notes.

## v0.2.3 & v0.2.4 (2017-06-07)

* **Fixed:** Window can resize vertically again.
* **Fixed:** Flickering and sometimes lost selection in the results list when clicking a `[[WikiLink]]`, problems introduced in v0.2.2.

## v0.2.2 (2017-06-06)

* **Fixed:** Clicking a `[[WikiLink]]` to a matching note selects and shows the contents of the best match so you don't have to click inside the search result list.
* **Fixed:** Filter shortcuts were gone from the main menu. Now they're back again.
* **Fixed:** A ton of issues with the Omnibar. Again. It should be more reliable now. I will not say it's 100% working, because this little bugger showed me quite often how to crush my coding confidence, but it's _close!_
* **Changed:** Selecting a filter now replaces the search completely instead of appending pieces to it.
* **New:** You can now configure which file extensions The Archive should use for note files.

And another open source library, resulting in 4 libraries from this project!


## v0.2.1 (2017-05-27)

This release has many small fixes and a lot of bigger changes. The list sums up some of them, but the behavior and "feel" of interacting with the app should have improved. Whatever you notice, please email me with your opinion on the changes and where you experience most friction.

* **Fixed:** The Omnibar behaves better. There were so many weird edge cases whenever I fixed one thing that I lost track of what has changed. But the problems are gone and the behavior should be just fine.
* **Fixed:** Hitting enter in the Omnibar didn't start editing the note when the note wasn't selected.
* **Fixed:** Selecting an archive directory that is not readable/writable presents an alert instead of silently failing.
* **Changed:** The search is now a whole magnitude faster. In turn, the auto-completion got more reliable better.
* **Changed:** Filters work differently now. They immediately affect your search and don't create a subset of your notes in a hidden fashion.
* **Changed:** Clicking a `[[Wiki Link]]` no longer creates non-existing notes. These links are now just search shortcuts.
* **New:** Background auto-saving of note changes every 5 seconds.

## v0.1.8 (2017-05-20)

* **Fixed:** After launch, not all notes where displayed for everybody. Should now be fixed. It's hard to reproduce, so please send reports with log files if it still happens!
* **Fixed:** Deleting notes in large archives did not always remove the note from the search results list. Now it does.
* **Fixed:** Deleting notes that were created in the Quick Entry helper as soon as possible triggered an error, too. Had the same latency-dependent reason as the fix above this one. Time sucks.


## v0.1.7 (2017-05-19)

* **Fixed:** Deletion bug where the wrong note was attempted to be removed.
* **Fixed:** Renaming bug that performed the change on disk but displayed an error nevertheless.
* **Fixed:** Hitting enter in the Omnibar did not always began editing the note.
* **Changed:** Hashtags in brackets or quotes are now clickable.
* **New:** "Capture Image" in the edit menu lets you create snapshots to quickly include drawings into your notes.
* **New:** Configure the path where snapshots are stored relative to your archive. Defaults to `./media/`.

This release introduces yet another open source library I created, now 3 in total.

## v0.1.6 (2017-05-16)

* **Fixed:** Clicking a hashtag does not deselect the currently visible note.
* **Fixed:** Don't select a random note after start.
* **Fixed:** Keep note selected in the results list when the search results change.

## v0.1.5 (2017-05-15)

* **Fixed:** Archive is faster when reacting to links. -- Is performance a "fix"? Well, higher reliability is! Medium-sized archives (Sascha's and mine with 4800 and 3800 notes resp.) didn't always follow clicked `[[Wiki Link]]`s. If you had looked at the event log, you'd see that a lot of stuff would go on, sometimes leading to showing the note with the link again instead of the link target. But no more!
* **Fixed:** The Omnibar. Like, in total. There were so many different edge cases over the last couple days that I cannot recall what was wrong initially. Especially in large archives with the current _SuperSlowSearch_™ it became unusable. Look out for this:
    * When you click a `[[WikiLink]]`, the Omnibar should display the link text. If the target note is not among the filtered search results, reset the search to display it in the results list. Keep the search as it was otherwise.
    * When you click a `#hashtag`, the Omnibar should display the tag as search term, ultimately resetting the search. (But not the active filter!)
    * When you type, the Omnibar should show the characters you've typed, no matter how slow the search. Your will is its command.
    * When you type and a note among the search results begins with your search term, the Omnibar should auto-complete your input and display the note in anticipatory obedience.
    * When you delete parts of the search, auto-completion should not be active. Only when you type. Also, the display should reset to "nothing".
* **Changed:** Perceived performance when searching is better. When you type faster than the _SuperSlowSearch_™ can sift through your notes, you won't be interrupted, the app won't freeze, and it won't show outdated auto-completion suggestions. On the flip side, if you want to see intermediate search results in huge archives, you have to wait at the end. This is an interesting psychological effect: Since the typing up until the end is now undelayed, the single and final delay feels like an eternity. Before, you got used to the slow response time. It was annoying, too, but different.
* **Changed:** Printing is disabled for now because the system's default is pretty useless. Will come back with a revenge later during the beta.
* **Changed:** Changing a note but then undoing the change no longer touches and overwrites the file to reduce disk load. (And to keep the event log smaller. 😁)

## v0.1.4 (2017-05-12)

* **Fixed:** Hiding the sidebar does not shrink but grow the note text editor as expected.
* **Fixed:** Filename conflicts when renaming notes are now resolved by appending `.1`, `.2`, `.3`, ... (whichever is free) to the desired title.
* **Fixed:** Clicking on `#hashtag` links now searches for notes with that phrase instead of creating a note called `#hashtag`. `[[Wiki Links]]` still work as expected: they search for a note starting with the link content or create a new note if none exists.
* **Changed:** Sorting options in View > Sort By are now less clever and say what you'll get on the tin.


## v0.1.3 (2017-05-12)

* **Fixed:** Window and results list sizes are restored when re-opening the app.
* **Fixed:** `[[Wiki links]]` are now clickable when you add parens around them. Or punctuation marks.
* **Fixed:** The directory selection panel now shows the "New Folder" button y'all have been missing so badly.
* **Fixed:** Searching in the Omnibar now does not replace the case you typed in when auto-completing suggestions. So if you have a note called "Banana" and you type "ban", the Omnibar will show "banana". Also, this way you can start note titles with different cases than existing notes starting with the same letter :) (Thanks to Rocco Nicosia for finding that one!)
* **Changed:** The results list shows numbers in monospaced variant so your note IDs are all of the same width.
* **Changed:** Before deleting a note, you'll now get a confirmation dialog.
* **Changed:** The archive selection window is now less ugly.
* **Changed:** The divider of note editor and search results is now thicker for better partitioning of the space available.
* **New:** The help menu has new items to send feedback and get to this website.

## v0.1.2 (2017-05-10)

* **Fixed:** Double-hash hashtags (`##example`) are now clickable. Sascha uses them for broader categories in his archive.
* **Fixed:** Creating an empty note now selects and edits the new note automatically.
* **Fixed:** Clicking a link triggers a search (and puts the cursor into the Omnibar). If there is a partial matching note (a note that starts with the link anchor text), that note will be selected and editing starts. This way you can use wiki links to IDs like `[[201705101030]]` and jump to the note right away.
* **Fixed:** Creating a new note aborted editing after a couple of seconds because the Finder/file system updates the file in the background again. These background refreshers should not affect your active editing session anymore.
* **Fixed:** Changing a note, then focusing the Omnibar deselected the note and displayed "Nothing Selected" instead of the note's text.
* **Fixed:** Quick entry helper updates with colors and font changes.
* **New:** You can change the font size of the search results list on the left. BIGGER TEXT FOR EVERYBODY!

## v0.1.1 (2017-05-09)

* **Fixed:** entering an existing note title in the Omnibar, then hitting enter, previously resulted in an attempt to create the same note twice.
* **Fixed:** The Omnibar now shows the title of the selected note as you change the selection.
* **Fixed:** The note editor now scrolls. For real.
* **New:** Typing in the Omnibar selects a note from the results that starts with the exact title. Since IDs are at the beginning, this is pretty much useless for regular Zettel notes unless I make the archive "Zettel-aware", that is treat notes with IDs differently.
* **New:** Hitting Enter in an empty Omnibar creates an empty note and displays it.
* **New:** "X"-button to clear the selection added to the Omnibar.
* **New:** ⌘C (copy) from the search results list is now possible.
* **New:** The search results's background color now changes with the editor color.
* **New:** You can specify the minimum inner distance between the editor text field's border and the text, also known as inset or padding.
* **Changed:** Searching inside a note using ⌘F does not display a separate window anymore but the more modern "search bar" at the top.

**Known issue:** replacing content from the search bar is not undoable.

## v0.1.0 (2017-04-28)

I won't list everything I did to get this first useful version up and running (and kinda polished, compared to my first TableFlip build) because "a running app with functionality" is pretty self-explanatory already. We have text file editing, a quick entry helper, editor style preferences, and filter management, basically.

Instead, here are some fun facts:

* Thanks to all the open source libraries I use (including self-made ones), the overhead affecting the file size is huge: this version takes up 38&nbsp;MB of disk space. 😱 Is this really the future? Then again, any Electron-based app (like Slack, VisualStudio Code, Atom, and numerous others) will need at least 110&nbsp;MB because there's a full Chrome browser included.
* I started my first experiment in code on 19th November, 2016. (And I didn't do anything for most of March thanks to my post-op.)
* It took 697 source code repository commits (= micro milestones I checked in) to get this far.
* With 921 unit test cases, this is the project with the most automated test I ever wrote on my own. (Projects where I did work in a team had significantly less tests, by the way.)
* I extracted and published 2 new open source libraries in the process and updated another one that I published back when I released TableFlip for beta.
